install.packages('bibliometrix')   
install.packages('xlsx')  
library(bibliometrix) 
biblioshiny()  
# xlsx package to read, write and format Excel files.
library(readxl)  
library(xlsx)  

# Saving papers from Lens in a variable
Lens_Bibliometrix_Export_File_2022_11_07 <- read_excel("Lens_Bibliometrix-Export-File-2022-11-07.xlsx")
View(Lens_Bibliometrix_Export_File_2022_11_07)

# Saving papers from Dimensions in a variable
Dimensions_Bibliometrix_Export_File_2022_11_07 <- read_excel("Dimensions_Bibliometrix-Export-File-2022-11-07.xlsx")
View(Dimensions_Bibliometrix_Export_File_2022_11_07)

# Saving papers from Scopus in a variable
Scopus_Bibliometrix_Export_File_2022_11_07 <- read_excel("Scopus_Bibliometrix-Export-File-2022-11-07.xlsx")
View(Scopus_Bibliometrix_Export_File_2022_11_07)

# Merging files 
Merging <- mergeDbSources(Dimensions_Bibliometrix_Export_File_2022_11_07, Scopus_Bibliometrix_Export_File_2022_11_07, Lens_Bibliometrix_Export_File_2022_11_07, remove.duplicated=TRUE)

write.xlsx(Merging,file="new.file_with_3_databases.xlsx") 

Merging <- read.xlsx(file="new.file_with_3_databases.xlsx", sheetIndex=1) 

#################################################################################
                      ===>>> Annual Scientific Production
#################################################################################

x <- Merging
x$Years <- x$PY

Tab=table(x$Years)

## checking if there are missing years. THere isnt'. 
YY=setdiff(seq(min(x$Years, na.rm=TRUE),max(x$Years, na.rm=TRUE)),names(Tab))
# Building dataframe with corresponding years and values
Y=data.frame(Year=as.numeric(c(names(Tab),YY)),Freq=c(as.numeric(Tab),rep(0,length(YY))))
# Ordering 
Y=Y[order(Y$Year),]

# Removing papers from 2023 (3 papers) New Dataframe Y without 2023:
Y <- Y[Y$Year < 2023,] 

# Creating text for subtitles 
names(Y)=c("Year","Frequency")

# Defining layout 
xcoord <- c(max(Y$Year)-0.02-diff(range(Y$Year))*0.15, max(Y$Year)-0.02)+1
ycoord <- c(min(Y$Freq),min(Y$Freq)+diff(range(Y$Freq))*0.15)

# 
g=ggplot(Y, aes(x = .data$Year, y = .data$Frequency)) +
  geom_line() +
  geom_area(fill = 'grey90', alpha = .5) +
  labs(x = 'Year'
       , y = 'Articles'
       ) +
  scale_x_continuous(breaks= (Y$Year[seq(1,length(Y$Year),by=2)])) +
  theme(text = element_text(color = "#444444")
        ,panel.background = element_rect(fill = '#FFFFFF')
        ,panel.grid.minor = element_line(color = '#EFEFEF')
        ,panel.grid.major = element_line(color = '#EFEFEF')
        ,plot.title = element_text(size = 18)  
        ,axis.title = element_text(size = 8, color = '#555555') #articles,year titles 
        ,axis.title.y = element_text(vjust = 1, angle = 90)
        ,axis.title.x = element_text(hjust = 0.5)
        ,axis.text.x = element_text(size=8, angle = 90) # size of x dates 
        ,axis.text.y = element_text(size=8, angle = 90) # size of y dates 
        ,axis.line.x = element_line(color="black",size=0.5)
        ,axis.line.y = element_line(color="black",size=0.5)
  ) 

plot(g)
#ggsave("teste.png",g, width = 900 ,height = 624,units = "px",dpi= 300)
 



